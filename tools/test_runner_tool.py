# -*- coding: utf-8 -*-
"""test_runner_tool.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-gvRCiRWXcZUlwEPOVd-G_yNZ5q_q3Kv
"""

# tools/test_runner_tool.py
import tempfile
import subprocess
import os
import sys

def test_runner_tool(tests: str, code: str) -> (bool, str):
    """
    Run tests by writing tests and code to temp files and executing pytest.
    Returns (passed: bool, error_message: str)
    """
    with tempfile.TemporaryDirectory() as tmpdir:
        code_path = os.path.join(tmpdir, "module.py")
        tests_path = os.path.join(tmpdir, "test_module.py")

        with open(code_path, "w") as f_code:
            f_code.write(code)
        with open(tests_path, "w") as f_tests:
            f_tests.write(tests)

        # Build command
        cmd = [sys.executable, "-m", "pytest", tests_path, "--maxfail=1", "--disable-warnings", "-q"]

        print(f"[DEBUG] Temporary directory: {tmpdir}")
        print(f"[DEBUG] Code file: {code_path}")
        print(f"[DEBUG] Tests file: {tests_path}")
        print(f"[DEBUG] Running command: {' '.join(cmd)}")

        try:
            result = subprocess.run(
                cmd,
                capture_output=True,
                text=True,
                timeout=15,
                cwd=tmpdir
            )
            print(f"[DEBUG] Return code: {result.returncode}")
            print(f"[DEBUG] STDOUT:\n{result.stdout}")
            print(f"[DEBUG] STDERR:\n{result.stderr}")

            passed = (result.returncode == 0)
            error_msg = result.stdout + "\n" + result.stderr if not passed else ""
        except Exception as e:
            passed = False
            error_msg = str(e)
            print(f"[DEBUG] Exception occurred: {error_msg}")

    return passed, error_msg